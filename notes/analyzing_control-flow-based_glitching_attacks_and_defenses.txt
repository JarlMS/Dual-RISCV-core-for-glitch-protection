- Glitching Demystified: Analyzing Control-flow-based Glitching Attacks and Defenses - 

'ChipWhisperer' - microcontroller using open-source glitching hardware. 
'GlitchResistor' - open-source, software-based glitching defense tool that can automatically insert glitching defenses into any 
existing source code, in an architecture independent way. 

Hardware-induced faults, glitches, are capable of corrupting the system state by modifying both instructions and data, and can be 
levaraged to undermine software-based security mechanisms, even if the software security mechanisms are implemented with 
no semantic vulnerabilities. 

Malicius glitches have been used to compromise:
    * Secure smart cards 
    * Security-hardened gaming consoles
    * Enterprise Internet Protocol (IP) phones
    * Used to bypass Intel's Software Guard Extension (SGX) protections 
    * Used to bypass ARM's Trust Zone 
    * Extract hardware-embedded cryptographic keys. 

Glitching attacks involve introducing a physical disturbance to a system that will ultimately corrupt the instructions 
being executed or the data being manipulated. This corruption can be achieved by changing the supply voltage, optical probing with
lasers, disrupting the clock or introducing an electromagnetic pulse (EMP). 

To leverage these fautls in a successful way, the fault must be injected at a specific time in the execution pipeline. 

* Background 

Glitching can be done either invasively (e.g., decapsuling the chip) or non-invasively (e.g., through electromagnetic interference).
Non-invasive attacks can go undetected, and often allows the attacker to repeat the attack indefinetly. 

Voltage glitching and clock glithcing are the most common. 

To inject a clock glitch, an attacker must simultaneously configure both the width and location in the clock cycle to inject a glitch,
as well as the offset from an observable trigger. Similar paramters must be tuned for both voltage and EM glitches (e.g., the 
duration and voltage of the attack or the location and intensity of the EMP). 

Glitching could in theory be used to skip every defensive (software) instruction and even transform benign instructions 
into malicious ones. Nevertheless, software based techniques are cheaper to implement and can be effective. 

* Threat Model 

